USE ORDERS_DETAILS;
CREATE TABLE ORDERS(
ORDERID INT NOT NULL PRIMARY KEY,
ITEM VARCHAR(20),
AMOUNT INT,
PRODUCT_ID INT);
SELECT * FROM ORDERS;
INSERT INTO ORDERS VALUES(3,'MONITOR',12000,3),(4,'KEYBOARD',400,1),(5,'MOUSEPAD',200,2);
SELECT * FROM ORDERS;
UPDATE ORDERS SET AMOUNT=400 WHERE ORDERID=1;
SELECT ITEM,SUM(AMOUNT) AS TOTAL_AMT FROM ORDERS GROUP BY ITEM;
-- SELECT ITEM,SUM(AMOUNT) AS TOTAL_AMT FROM ORDERS GROUP BY AMOUNT; /*NOT WORKING*/
SELECT ITEM,SUM(AMOUNT) AS TOTAL_AMT FROM ORDERS GROUP BY ROLLUP(ITEM);/*ROLLUP*/
SELECT ITEM,SUM(AMOUNT) AS TOTAL_AMT FROM ORDERS GROUP BY CUBE(ITEM);
SELECT TOP 1 * FROM ORDERS;/*FIRST*/ --Top is used instead of Limit in SQL
-- SELECT * FROM ORDERS ORDER BY ORDERID ASC LIMIT 1;
SELECT AMOUNT,ROW_NUMBER() OVER(ORDER BY AMOUNT DESC) ROWNUM,
RANK() OVER(ORDER BY AMOUNT DESC) RANK , DENSE_RANK() OVER(ORDER BY AMOUNT DESC) DENSE_RANK FROM ORDERS;/*RANK,DENSE RANK*/
SELECT ORDERID,AMOUNT,PRODUCT_ID,LEAD(AMOUNT,1,0) OVER(PARTITION BY PRODUCT_ID ORDER BY AMOUNT DESC) AS LEAD FROM ORDERS;/*LEAD*/
SELECT ORDERID,AMOUNT,PRODUCT_ID,LAG(AMOUNT,1,0) OVER(PARTITION BY PRODUCT_ID ORDER BY AMOUNT DESC) AS LAG FROM ORDERS;/*LAG*/
SELECT * FROM ORDERS WHERE ORDERID=(SELECT MAX(ORDERID) FROM ORDERS);/*LAST ROW*/